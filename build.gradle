plugins {
    id 'org.springframework.boot' version "2.6.2"
    id "de.undercouch.download" version "5.2.1"
    id 'java'
}

group 'sky'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    all {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
    }
}


dependencies {
    implementation("org.apache.spark:spark-core_2.13:3.3.0")
    implementation("org.apache.spark:spark-sql_2.13:3.3.0")
    implementation("org.apache.spark:spark-streaming-kafka-0-10_2.13:3.3.0")
    implementation("org.apache.spark:spark-sql-kafka-0-10_2.13:3.3.0")
    implementation('org.apache.lucene:lucene-core:9.4.2')
    implementation("org.apache.lucene:lucene-queries:9.4.2")
    implementation("org.apache.lucene:lucene-memory:9.4.2")
    implementation("org.apache.lucene:lucene-backward-codecs:9.4.2")
    implementation("org.apache.lucene:lucene-test-framework:9.4.2")
    implementation("org.apache.lucene:lucene-analyzers-common:9.4.2")
    implementation("org.apache.lucene:lucene-queryparser:9.4.2")
    implementation("org.apache.lucene:lucene-backward-codecs:9.4.2")
    implementation("org.apache.lucene:lucene-codecs:9.4.2")
    implementation("org.apache.solr:solr-core:9.1.0")
    implementation("org.apache.solr:solr-solrj:9.1.0")
//    compileOnly("org.apache.spark:spark-streaming_2.13:3.3.0")
//    TODO: check for support for scala 2_13:
//      testImplementation("com.holdenkarau:spark-testing-base_2.12:3.3.0_1.2.0")

//    implementation("org.scala-lang:scala-library:2.13.10")
//    implementation("org.scala-lang:scala-library") {
//        version {
//            strictly("2.11.1")
//        }
//    }
    implementation("org.glassfish.jaxb:jaxb-runtime:2.3.3")

//    implementation("org.apache.pulsar:pulsar-client:2.10.1")

    implementation("org.springframework.boot:spring-boot-starter:2.7.3")
    implementation("org.springframework.boot:spring-boot-configuration-processor:2.7.3")
//    implementation("ch.qos.logback:logback-classic:1.4.1")
    implementation("ch.qos.logback:logback-core:1.2.6")
//    implementation('ch.qos.logback:logback-core:1.4.1')
    implementation("org.slf4j:slf4j-api:1.7.30")
//    implementation("org.slf4j:slf4j-simple:1.7.30")

    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:2.7.3")
    annotationProcessor("org.springframework.boot:spring-boot-autoconfigure:2.7.3")
    implementation("org.springframework.kafka:spring-kafka:2.9.0")
    implementation("org.springframework.boot:spring-boot-starter-parent:2.7.3")
    implementation("org.springframework.boot:spring-boot-starter-webflux:2.7.3")
    implementation("org.springframework.boot:spring-boot-starter-validation:2.7.3")

    implementation("com.squareup:javapoet:1.13.0")
    implementation("javax.annotation:jsr250-api:1.0")
    implementation('com.fasterxml.jackson.core:jackson-annotations:2.13.4')
    implementation('org.mockito:mockito-junit-jupiter:4.8.0')
    implementation("io.projectreactor.kafka:reactor-kafka:1.3.12")
    implementation("io.projectreactor.kafka:reactor-kafka-tools:1.3.12")
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.4')
    implementation("io.projectreactor:reactor-core:3.4.23")
    implementation("com.google.code.gson:gson:2.9.0")
    compileOnly('org.projectlombok:lombok:1.18.24')
    annotationProcessor("org.projectlombok:lombok:1.18.22")
    implementation("io.github.resilience4j:resilience4j-reactor:1.7.1")


    testCompileOnly("org.projectlombok:lombok:1.18.22")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.22")
    testImplementation("org.assertj:assertj-core:3.23.1")
    testImplementation("org.springframework.boot:spring-boot-starter-test:2.7.3")
    testImplementation("org.junit.platform:junit-platform-commons:1.9.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.9.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.0")
    testImplementation('org.testcontainers:kafka:1.17.4')
    testImplementation('org.testcontainers:junit-jupiter:1.17.4')
}

//task downloadFile(type: Download) {
//    src 'http://www.example.com/index.html'
//    dest buildDir
//    overwrite false
//}

test {
    useJUnitPlatform()

}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}
tasks.withType(Test).all {
    jvmArgs += '--enable-preview'
    jvmArgs += '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED'
}
tasks.withType(JavaCompile).all {
    options.compilerArgs += ['--enable-preview']
    options.compilerArgs += ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

compileJava {
    options.compilerArgs += ["--enable-preview"]
}